components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthTokenRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: example@mail.com
        password:
          type: string
          format: password
          example: Qwerty12345
      required:
        - email
        - password

    AuthTokenResponse:
      title: AuthTokenResponse
      type: object
      additionalProperties: false
      required:
        - token
      properties:
        token:
          type: string
          description: JWT
          example: eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIkFETUlOIl0sInN1YiI6ImRtaWtoYWlsb3ZpY2gwM0BnbWFpbC5jb20iLCJpYXQiOjE3MTU4MDIyNTQsImV4cCI6MTcxNTkxMDI1NH0.pRIMnAzcdcvd2HkveUlLtgM9iCeek1UGew4JEt3oRzmNB80p795KSl9Tx7P0zqytK5_aH3Q-ydmrWUVELHy7Cg

    BadRequest:
      title: ErrorObject
      type: object
      additionalProperties: false
      properties:
        status:
          type: integer
          description: Error code
          minimum: 100
          maximum: 599
          example: 400
        title:
          type: string
          description: Error title
          example: Bad Request
          maxLength: 100
      required:
        - status
        - title
      example:
        status: 400
        title: Bad Request

    Unauthorized:
      title: ErrorObject
      type: object
      additionalProperties: false
      properties:
        status:
          type: integer
          description: Error code
          minimum: 100
          maximum: 599
          example: 400
        title:
          type: string
          description: Error title
          example: Bad Request
          maxLength: 100
      required:
        - status
        - title
      example:
        status: 401
        title: Unauthorized

    NotFound:
      title: ErrorObject
      type: object
      additionalProperties: false
      properties:
        status:
          type: integer
          description: Error code
          minimum: 100
          maximum: 599
          example: 400
        title:
          type: string
          description: Error title
          example: Bad Request
          maxLength: 100
      required:
        - status
        - title
      example:
        status: 404
        title: Not Found

    Order:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: '8efbee82-8a0c-407a-a4c0-16bbad40a23e'
          description: Order id

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: User id
        first_name:
          type: string
          example: John
          description: User first name
        last_name:
          type: string
          example: Doe
          description: User last name
        email:
          type: string
          format: email
          example: test@mail.com
          description: User email
        phone_number:
          type: string
          format: phone_number
          example: 380999999999
          description: User phone number

    Product:
      type: object
      properties:
        UUId:
          type: string
          example: '123e4567-e89b-12d3-a456-426614174000'
          description: Product UUId.
        brand:
          type: string
          example: Apple
          description: Product's brand.
        name:
          type: string
          example: APPLE iPhone
          description: Name of the product.
        description:
          type: string
          example: Device type, operation system, etc.
          description: Product description
        createdAt:
          type: string
          format: date-time
          example: 2024-06-13T14:52:00Z
          description: Timestamp when the product was created
        status:
          type: object
          properties:
            value:
              type: string
              enum:
                - VISIBLE
                - HIDDEN
              example: VISIBLE
              description: Status of the product
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
                description: Tag ID
              title:
                type: string
                example: Electronics
                description: Tag title
            description: List of tags associated with the product
        images:
          type: array
          items:
            type: string
            format: uri
            example: https://example.com/image.jpg
          description: List of image URLs associated with the product.
        quantity:
          type: integer
          example: 50
          description: Available quantity of the product
        price:
          type: number
          format: float
          example: 999.99
          description: Price of the product

    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'
      example:
        - UUId: '123e4567-e89b-12d3-a456-426614174000'
          brand: Apple
          name: APPLE iPhone
          description: Smartphone, IOs
          createdAt: 2024-06-13T14:52:00Z
          status:
            value: VISIBLE
          tags:
            - id: 2
              title: Smartphone
          images:
            - https://example.com/apple.jpg
            - https://example.com/iphone.jpg
          quantity: 1
          price: 999.99
        - UUId: '223e4567-e89b-12d3-a456-426614174111'
          brand: Samsung
          name: Samsung Galaxy
          description: Smartphone, Android
          createdAt: 2024-06-13T15:00:00Z
          status:
              value: VISIBLE
          tags:
              - id: 2
                title: Smartphone
          images:
              - https://example.com/samsung.jpg
              - https://example.com/galaxy.jpg
          quantity: 1
          price: 999.99

    Cart:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: Cart ID
        user:
          $ref: '#/components/schemas/User'
        products:
          $ref: '#/components/schemas/Products'
        quantity:
          type: integer
          format: int64
          example: 1
          description: Quantity of the items in the cart