name: code-maven-build

on:
  pull_request:
    #paths:
    #  - 'code/**'
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'pull_request' && (github.base_ref == 'main' && 'prod' || github.base_ref == 'develop' && 'dev') || 'test'}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract short SHA
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build jar with Maven
        run: mvn -f code/pom.xml clean package -DskipITs

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to Azure Container Registry
        id: az-acr-login
        run: az acr login --name $ACR_NAME
        env:
          ACR_NAME: ${{ secrets.AZURE_ACR_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image and push
        uses: docker/build-push-action@v5
        with:
          context: code/Dockerfile
          push: true
          tags: ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/mic-orders:${{ env.SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Azure Container Registry logout
        if: always()
        run: docker logout
        needs: az-acr-login